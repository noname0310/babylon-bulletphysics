"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[3477],{3477:(t,r,e)=>{e.d(r,{x:()=>a});class n{_wasmInstance;_ptr;_count;_shapeReferences;constructor(t,r,e){this._wasmInstance=t,this._ptr=r,this._count=e,this._shapeReferences=new Array(e).fill(null)}dispose(){if(0!==this._ptr){this._wasmInstance.deref()?.deallocateBuffer(this._ptr,144*this._count),this._ptr=0;for(let t=0;t<this._shapeReferences.length;++t){const r=this._shapeReferences[t];r?.removeReference()}this._shapeReferences.fill(null)}}get ptr(){return this._ptr}get count(){return this._count}getShape(t){return this._shapeReferences[t]??null}setShape(t,r){if(t<0||this._count<=t)throw new RangeError("Index out of range");const e=this._shapeReferences[t];e&&e.removeReference(),this._shapeReferences[t]=r,r&&r.addReference()}}function s(t){t.dispose()}const i=new WeakMap;class a{_wasmInstance;_uint32Ptr;_float32Ptr;_uint8Ptr;_uint16Ptr;_inner;constructor(t,r){this._wasmInstance=t;const e=t.allocateBuffer(144*r);this._uint32Ptr=t.createTypedArray(Uint32Array,e,36*r),this._float32Ptr=t.createTypedArray(Float32Array,e,36*r),this._uint8Ptr=t.createTypedArray(Uint8Array,e,144*r),this._uint16Ptr=t.createTypedArray(Uint16Array,e,72*r),this._inner=new n(new WeakRef(t),e,r);const a=this._uint32Ptr.array,h=this._float32Ptr.array,l=this._uint8Ptr.array,o=this._uint16Ptr.array;for(let t=0;t<r;++t){const r=144*t;a[(r+0)/4]=0,h[(r+16)/4+0]=1,h[(r+16)/4+1]=0,h[(r+16)/4+2]=0,h[(r+16)/4+3]=0,h[(r+16)/4+4]=0,h[(r+16)/4+5]=1,h[(r+16)/4+6]=0,h[(r+16)/4+7]=0,h[(r+16)/4+8]=0,h[(r+16)/4+9]=0,h[(r+16)/4+10]=1,h[(r+16)/4+11]=0,h[(r+16)/4+12]=0,h[(r+16)/4+13]=0,h[(r+16)/4+14]=0,h[(r+16)/4+15]=1,o[(r+80)/2]=0,l[(r+82)/1]=0,h[(r+84)/4]=1,h[(r+88)/4+0]=0,h[(r+88)/4+1]=0,h[(r+88)/4+2]=0,h[(r+100)/4]=0,h[(r+104)/4]=0,h[(r+108)/4]=.5,h[(r+112)/4]=0,h[(r+116)/4]=0,h[(r+120)/4]=1,o[(r+124)/2]=1,o[(r+126)/2]=65535,l[(r+128)/1]=0,l[(r+129)/1]=0,l[(r+130)/1]=0}let c=i.get(t);void 0===c&&(c=new FinalizationRegistry(s),i.set(t,c)),c.register(this,this._inner,this)}dispose(){if(0===this._inner.ptr)return;this._inner.dispose();const t=i.get(this._wasmInstance);t?.unregister(this)}get ptr(){return this._inner.ptr}get count(){return this._inner.count}getPtr(t){return this._nullCheck(),this._inner.ptr+144*t}_nullCheck(){if(0===this._inner.ptr)throw new Error("Cannot access disposed RigidBodyConstructionInfo")}getShape(t){return this._nullCheck(),this._inner.getShape(t)}setShape(t,r){this._nullCheck(),this._inner.setShape(t,r);const e=144*t;this._uint32Ptr.array[(e+0)/4]=r?r.ptr:0}getInitialTransformToRef(t,r){this._nullCheck();const e=144*t,n=this._float32Ptr.array;return r.set(n[(e+16)/4+0],n[(e+16)/4+1],n[(e+16)/4+2],n[(e+16)/4+3],n[(e+16)/4+4],n[(e+16)/4+5],n[(e+16)/4+6],n[(e+16)/4+7],n[(e+16)/4+8],n[(e+16)/4+9],n[(e+16)/4+10],n[(e+16)/4+11],n[(e+16)/4+12],n[(e+16)/4+13],n[(e+16)/4+14],n[(e+16)/4+15]),r}setInitialTransform(t,r){this._nullCheck();const e=144*t,n=this._float32Ptr.array;r.copyToArray(n,(e+16)/4)}getMotionType(t){this._nullCheck();const r=144*t;return this._uint8Ptr.array[(r+82)/1]}setMotionType(t,r){this._nullCheck();const e=144*t;this._uint8Ptr.array[(e+82)/1]=r}getMass(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+84)/4]}setMass(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+84)/4]=r}getLocalInertiaToRef(t,r){this._nullCheck();const e=144*t;if(!(1&this._uint16Ptr.array[(e+80)/2]))return null;const n=this._float32Ptr.array;return r.set(n[(e+88)/4+0],n[(e+88)/4+1],n[(e+88)/4+2]),r}setLocalInertia(t,r){this._nullCheck();const e=144*t;if(null===r)return void(this._uint16Ptr.array[(e+80)/2]&=-2);this._uint16Ptr.array[(e+80)/2]|=1;const n=this._float32Ptr.array;n[(e+88)/4+0]=r.x,n[(e+88)/4+1]=r.y,n[(e+88)/4+2]=r.z}getLinearDamping(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+100)/4]}setLinearDamping(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+100)/4]=r}getAngularDamping(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+104)/4]}setAngularDamping(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+104)/4]=r}getFriction(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+108)/4]}setFriction(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+108)/4]=r}getRestitution(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+112)/4]}setRestitution(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+112)/4]=r}getLinearSleepingThreshold(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+116)/4]}setLinearSleepingThreshold(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+116)/4]=r}getAngularSleepingThreshold(t){this._nullCheck();const r=144*t;return this._float32Ptr.array[(r+120)/4]}setAngularSleepingThreshold(t,r){this._nullCheck();const e=144*t;this._float32Ptr.array[(e+120)/4]=r}getCollisionGroup(t){this._nullCheck();const r=144*t;return this._uint16Ptr.array[(r+124)/2]}setCollisionGroup(t,r){this._nullCheck();const e=144*t;this._uint16Ptr.array[(e+124)/2]=r}getCollisionMask(t){this._nullCheck();const r=144*t;return this._uint16Ptr.array[(r+126)/2]}setCollisionMask(t,r){this._nullCheck();const e=144*t;this._uint16Ptr.array[(e+126)/2]=r}getAdditionalDamping(t){this._nullCheck();const r=144*t;return!!this._uint8Ptr.array[(r+128)/1]}setAdditionalDamping(t,r){this._nullCheck();const e=144*t;this._uint8Ptr.array[(e+128)/1]=+r}getNoContactResponse(t){this._nullCheck();const r=144*t;return!!this._uint8Ptr.array[(r+129)/1]}setNoContactResponse(t,r){this._nullCheck();const e=144*t;this._uint8Ptr.array[(e+129)/1]=+r}getDisableDeactivation(t){this._nullCheck();const r=144*t;return!!this._uint8Ptr.array[(r+130)/1]}setDisableDeactivation(t,r){this._nullCheck();const e=144*t;this._uint8Ptr.array[(e+130)/1]=+r}}}}]);