"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[3948],{37:(i,t,e)=>{e.d(t,{o:()=>s});class s{_lock;constructor(i){this._lock=i}wait(){const i=this._lock.array,t=performance.now();for(;0!==Atomics.load(i,0);)if(performance.now()-t>1e4)throw new Error("Spinlock timeout")}}},912:(i,t,e)=>{e.d(t,{d:()=>r});var s=e(9923);class r{shouldSync;_isDirty;_motionStateMatricesBuffer;_isMotionStateMatricesBufferDirty;_motionStateMatrixDirtyFlags;_dynamicTransformMatricesBuffer;_isDynamicTransformMatricesBufferDirty;_dynamicTransformMatrixDirtyFlags;_commandBuffer;_count;constructor(i){this.shouldSync=!1,this._isDirty=!1,this._motionStateMatricesBuffer=new Float32Array(16*i),this._isMotionStateMatricesBufferDirty=!1,this._motionStateMatrixDirtyFlags=new Uint8Array(i),this._dynamicTransformMatricesBuffer=null,this._isDynamicTransformMatricesBufferDirty=!1,this._dynamicTransformMatrixDirtyFlags=null;const t=this._commandBuffer=new Array(i);for(let e=0;e<i;++e)t[e]=new Map;this._count=i}get needToCommit(){return this._isDirty}commitToWasm(i,t,e,s,r){if(!this._isDirty)return;if(this._isMotionStateMatricesBufferDirty){const i=this._motionStateMatricesBuffer,t=e.array,r=this._motionStateMatrixDirtyFlags,a=s.array,o=this._count;let n=0,d=0;for(let e=0;e<o;++e)0!==r[e]?(t[d+4+0]=i[n],t[d+8+0]=i[n+1],t[d+12+0]=i[n+2],t[d+4+1]=i[n+4],t[d+8+1]=i[n+5],t[d+12+1]=i[n+6],t[d+4+2]=i[n+8],t[d+8+2]=i[n+9],t[d+12+2]=i[n+10],t[d+16+0]=i[n+12],t[d+16+1]=i[n+13],t[d+16+2]=i[n+14],0!==a[e]&&(a[e]=2),r[e]=0,n+=16,d+=20):(n+=16,d+=20);this._isMotionStateMatricesBufferDirty=!1}if(this._isDynamicTransformMatricesBufferDirty){const i=this._dynamicTransformMatricesBuffer,t=r,e=this._dynamicTransformMatrixDirtyFlags,s=this._count;let a=0;for(let r=0;r<s;++r){if(0===e[r]){a+=16;continue}const s=t[r].array;s[0]=i[a],s[16]=i[a+1],s[32]=i[a+2],s[1]=i[a+4],s[17]=i[a+5],s[33]=i[a+6],s[2]=i[a+8],s[18]=i[a+9],s[34]=i[a+10],s[48]=i[a+12],s[49]=i[a+13],s[50]=i[a+14],e[r]=0,a+=16}this._isDynamicTransformMatricesBufferDirty=!1}const a=this._commandBuffer;for(let e=0;e<this._count;++e)if(0!==a[e].size){for(const[s,r]of a[e])switch(s){case 0:i.rigidBodyBundleSetDamping(t,e,r[0],r[1]);break;case 1:{const s=r[1];i.rigidBodyBundleSetMassProps(t,e,r[0],s.x,s.y,s.z);break}case 2:{const s=r[0];i.rigidBodyBundleTranslate(t,e,s.x,s.y,s.z);break}}a[e].clear()}this._isDirty=!1}setTransformMatrixFromArray(i,t,e,s,r){const a=this._motionStateMatricesBuffer,o=this._motionStateMatrixDirtyFlags,n=16*e;a[n+0]=s[r],a[n+1]=s[r+1],a[n+2]=s[r+2],a[n+3]=0,a[n+4]=s[r+4],a[n+5]=s[r+5],a[n+6]=s[r+6],a[n+7]=0,a[n+8]=s[r+8],a[n+9]=s[r+9],a[n+10]=s[r+10],a[n+11]=0,a[n+12]=s[r+12],a[n+13]=s[r+13],a[n+14]=s[r+14],a[n+15]=1,o[e]=1,this._isMotionStateMatricesBufferDirty=!0,this._isDirty=!0}setTransformMatricesFromArray(i,t,e,s){this._motionStateMatricesBuffer.set(e,s),this._motionStateMatrixDirtyFlags.fill(1),this._isMotionStateMatricesBufferDirty=!0,this._isDirty=!0}setDynamicTransformMatrixFromArray(i,t,e,s){null===this._dynamicTransformMatricesBuffer&&(this._dynamicTransformMatricesBuffer=new Float32Array(this._motionStateMatricesBuffer.length)),null===this._dynamicTransformMatrixDirtyFlags&&(this._dynamicTransformMatrixDirtyFlags=new Uint8Array(this._motionStateMatrixDirtyFlags.length));const r=this._dynamicTransformMatricesBuffer,a=16*t;r[a+0]=e[s],r[a+1]=e[s+1],r[a+2]=e[s+2],r[a+3]=0,r[a+4]=e[s+4],r[a+5]=e[s+5],r[a+6]=e[s+6],r[a+7]=0,r[a+8]=e[s+8],r[a+9]=e[s+9],r[a+10]=e[s+10],r[a+11]=0,r[a+12]=e[s+12],r[a+13]=e[s+13],r[a+14]=e[s+14],r[a+15]=1,this._dynamicTransformMatrixDirtyFlags[t]=1,this._isDynamicTransformMatricesBufferDirty=!0,this._isDirty=!0}setDamping(i,t,e,s,r){this._commandBuffer[e].set(0,[s,r]),this._isDirty=!0}getLinearDamping(i,t,e){return i.rigidBodyBundleGetLinearDamping(t,e)}getAngularDamping(i,t,e){return i.rigidBodyBundleGetAngularDamping(t,e)}setMassProps(i,t,e,s,r){this._commandBuffer[e].set(1,[s,r.clone()]),this._isDirty=!0}getMass(i,t,e){return i.rigidBodyBundleGetMass(t,e)}getLocalInertia(i,t,e){const r=i.allocateBuffer(12),a=i.createTypedArray(Float32Array,r,3).array;i.rigidBodyBundleGetLocalInertia(t,e,r);const o=new s.Pq(a[0],a[1],a[2]);return i.deallocateBuffer(r,12),o}translate(i,t,e,s){this._commandBuffer[e].set(2,[s.clone()]),this._isDirty=!0}}},3880:(i,t,e)=>{e.d(t,{V:()=>r});var s=e(9923);class r{shouldSync;_isDirty;_motionStateMatrixBuffer;_isMotionStateMatrixBufferDirty;_dynamicTransformMatrixBuffer;_isDynamicTransformMatrixBufferDirty;_commandBuffer;constructor(){this.shouldSync=!1,this._isDirty=!1,this._motionStateMatrixBuffer=new Float32Array(16),this._isMotionStateMatrixBufferDirty=!1,this._dynamicTransformMatrixBuffer=null,this._isDynamicTransformMatrixBufferDirty=!1,this._commandBuffer=new Map}get needToCommit(){return this._isDirty}commitToWasm(i,t,e,s,r){if(this._isDirty){if(this._isMotionStateMatrixBufferDirty){const i=this._motionStateMatrixBuffer,t=e.array;t[4]=i[0],t[8]=i[1],t[12]=i[2],t[5]=i[4],t[9]=i[5],t[13]=i[6],t[6]=i[8],t[10]=i[9],t[14]=i[10],t[16]=i[12],t[17]=i[13],t[18]=i[14];const r=s.array;0!==r[0]&&(r[0]=2),this._isMotionStateMatrixBufferDirty=!1}if(this._isDynamicTransformMatrixBufferDirty){const i=this._dynamicTransformMatrixBuffer,t=r.array;t[0]=i[0],t[16]=i[1],t[32]=i[2],t[1]=i[4],t[17]=i[5],t[33]=i[6],t[2]=i[8],t[18]=i[9],t[34]=i[10],t[48]=i[12],t[49]=i[13],t[50]=i[14],this._isDynamicTransformMatrixBufferDirty=!1}for(const[e,s]of this._commandBuffer)switch(e){case 0:i.rigidBodySetDamping(t,s[0],s[1]);break;case 1:{const e=s[1];i.rigidBodySetMassProps(t,s[0],e.x,e.y,e.z);break}case 2:{const e=s[0];i.rigidBodyTranslate(t,e.x,e.y,e.z);break}}this._commandBuffer.clear(),this._isDirty=!1}}setTransformMatrixFromArray(i,t,e,s){this._motionStateMatrixBuffer.set(e,s),this._isMotionStateMatrixBufferDirty=!0,this._isDirty=!0}setDynamicTransformMatrixFromArray(i,t,e){null===this._dynamicTransformMatrixBuffer&&(this._dynamicTransformMatrixBuffer=new Float32Array(16)),this._dynamicTransformMatrixBuffer.set(t,e),this._isDynamicTransformMatrixBufferDirty=!0,this._isDirty=!0}setDamping(i,t,e,s){this._commandBuffer.set(0,[e,s]),this._isDirty=!0}getLinearDamping(i,t){return i.rigidBodyGetLinearDamping(t)}getAngularDamping(i,t){return i.rigidBodyGetAngularDamping(t)}setMassProps(i,t,e,s){this._commandBuffer.set(1,[e,s.clone()]),this._isDirty=!0}getMass(i,t){return i.rigidBodyGetMass(t)}getLocalInertia(i,t){const e=i.allocateBuffer(12),r=i.createTypedArray(Float32Array,e,3).array;i.rigidBodyGetLocalInertia(t,e);const a=new s.Pq(r[0],r[1],r[2]);return i.deallocateBuffer(e,12),a}translate(i,t,e){this._commandBuffer.set(2,[e.clone()]),this._isDirty=!0}}},3948:(i,t,e)=>{e.d(t,{h:()=>m});var s=e(9923),r=e(9848),a=e(554),o=e(37),n=e(5733),d=e(912),f=e(3880),h=e(5228),u=e(4444),c=e(9009);class l{_lock;_wasmInstance;_ptr;_worldReference;constructor(i,t,e,s){this._lock=i,this._wasmInstance=t,this._ptr=e,this._worldReference=s,s.addReference()}dispose(){0!==this._ptr&&(this._lock.wait(),this._wasmInstance.deref()?.destroyMultiPhysicsRuntime(this._ptr),this._ptr=0,this._worldReference.removeReference(),this._worldReference=null)}get ptr(){return this._ptr}}function B(i){i.dispose()}const y=new WeakMap;class m{onSyncObservable;onTickObservable;wasmInstance;lock;_inner;_physicsWorld;_scene;_afterAnimationsBinded;_evaluationType;_usingWasmBackBuffer;_rigidBodyUsingBackBuffer;_preserveBackBuffer;_dynamicShadowCount;useDeltaForWorldStep;timeStep;maxSubSteps;fixedTimeStep;_rigidBodyMap;_rigidBodyBundleMap;constructor(i,t={}){const{allowDynamicShadow:e=!1,preserveBackBuffer:s=!1}=t;this.onSyncObservable=new r.cP,this.onTickObservable=new r.cP,this.wasmInstance=i;const a=new n.F(this,e),d=i.createMultiPhysicsRuntime(a.ptr),f=i.multiPhysicsRuntimeGetLockStatePtr(d);this.lock=new o.o(i.createTypedArray(Uint8Array,f,1)),s&&i.multiPhysicsWorldUseMotionStateBuffer(a.ptr,!0),this._inner=new l(this.lock,new WeakRef(i),d,a),this._physicsWorld=a;let h=y.get(i);void 0===h&&(h=new FinalizationRegistry(B),y.set(i,h)),h.register(this,this._inner,this),this._scene=null,this._afterAnimationsBinded=null,this._evaluationType=c.q.Immediate,this._usingWasmBackBuffer=s,this._rigidBodyUsingBackBuffer=!1,this._preserveBackBuffer=s,this._dynamicShadowCount=0,this.useDeltaForWorldStep=!0,this.timeStep=1/60,this.maxSubSteps=10,this.fixedTimeStep=1/60,this._rigidBodyMap=new Map,this._rigidBodyBundleMap=new Map}dispose(){if(0===this._inner.ptr)return;this._inner.dispose(),this._physicsWorld.dispose(),this.onSyncObservable.clear(),this.onTickObservable.clear();const i=y.get(this.wasmInstance);i?.unregister(this)}get ptr(){return this._inner.ptr}_nullCheck(){if(0===this._inner.ptr)throw new Error("Cannot access disposed physics runtime")}createRigidBodyImpl(){return this._evaluationType===c.q.Immediate?new u.x:new f.V}createRigidBodyBundleImpl(i){return this._evaluationType===c.q.Immediate?new h.R(i.count):new d.d(i.count)}register(i){null===this._afterAnimationsBinded&&(this._nullCheck(),this._afterAnimationsBinded=()=>{this.afterAnimations(i.getEngine().getDeltaTime())},this._scene=i,i.onAfterAnimationsObservable.add(this._afterAnimationsBinded))}unregister(){null!==this._afterAnimationsBinded&&(this._scene.onAfterAnimationsObservable.removeCallback(this._afterAnimationsBinded),this._afterAnimationsBinded=null,this._scene=null)}afterAnimations(i){if(0!==this._inner.ptr){if(this.useDeltaForWorldStep){const t=this._scene;i=null!==t&&t.useConstantAnimationDeltaTime?16:Math.max(a.Z.MinDeltaTime,Math.min(i,a.Z.MaxDeltaTime)),i/=1e3}else i=this.timeStep;if(this._evaluationType===c.q.Buffered){if(void 0===this.wasmInstance.multiPhysicsRuntimeBufferedStepSimulation&&this._physicsWorld.stepSimulation(i,this.maxSubSteps,this.fixedTimeStep),this.lock.wait(),this._preserveBackBuffer||this._usingWasmBackBuffer||(this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!0),this._usingWasmBackBuffer=!0),!1===this._rigidBodyUsingBackBuffer){this._rigidBodyUsingBackBuffer=!0;for(const i of this._rigidBodyMap.keys())i.updateBufferedMotionState(!1);for(const i of this._rigidBodyBundleMap.keys())i.updateBufferedMotionStates(!1)}for(const i of this._rigidBodyMap.keys())i.commitToWasm();for(const i of this._rigidBodyBundleMap.keys())i.commitToWasm();this.onSyncObservable.notifyObservers(),this.wasmInstance.multiPhysicsRuntimeBufferedStepSimulation?.(this._inner.ptr,i,this.maxSubSteps,this.fixedTimeStep)}else{if(this._preserveBackBuffer&&this.lock.wait(),!this._preserveBackBuffer&&this._usingWasmBackBuffer&&0===this._dynamicShadowCount&&(this.lock.wait(),this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!1),this._usingWasmBackBuffer=!1),!0===this._rigidBodyUsingBackBuffer){this.lock.wait(),this._rigidBodyUsingBackBuffer=!1;for(const i of this._rigidBodyMap.keys())i.updateBufferedMotionState(!0);for(const i of this._rigidBodyBundleMap.keys())i.updateBufferedMotionStates(!0)}this._physicsWorld.stepSimulation(i,this.maxSubSteps,this.fixedTimeStep),this.onSyncObservable.notifyObservers()}this.onTickObservable.notifyObservers()}else this.unregister()}get evaluationType(){return this._evaluationType}set evaluationType(i){if(this._evaluationType!==i)if(c.q.Buffered,this._evaluationType=i,i===c.q.Buffered){for(const i of this._rigidBodyMap.keys())i.impl=new f.V;for(const i of this._rigidBodyBundleMap.keys())i.impl=new d.d(i.count)}else{for(const i of this._rigidBodyMap.keys())i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=new u.x;for(const i of this._rigidBodyBundleMap.keys())i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=new h.R(i.count)}}_gravity=new s.Pq(0,-10,0);getGravityToRef(i){return i.copyFrom(this._gravity)}setGravity(i){this._nullCheck(),this._gravity.copyFrom(i),this._physicsWorld.setGravity(i)}addRigidBody(i,t){this._nullCheck();const e=this._physicsWorld.addRigidBody(i,t);if(e){let t=this._rigidBodyMap.get(i);void 0===t&&(t=0),this._rigidBodyMap.set(i,t+1),this._rigidBodyUsingBackBuffer&&i.updateBufferedMotionState(!1);const e=i.impl instanceof f.V;e!==(this._evaluationType===c.q.Buffered)&&(e&&i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=this._evaluationType===c.q.Buffered?new f.V:new u.x)}return e}removeRigidBody(i,t){this._nullCheck();const e=this._physicsWorld.removeRigidBody(i,t);if(e){const t=this._rigidBodyMap.get(i);void 0!==t&&(1===t?this._rigidBodyMap.delete(i):this._rigidBodyMap.set(i,t-1)),i.updateBufferedMotionState(!1)}return e}addRigidBodyBundle(i,t){this._nullCheck();const e=this._physicsWorld.addRigidBodyBundle(i,t);if(e){let t=this._rigidBodyBundleMap.get(i);void 0===t&&(t=0),this._rigidBodyBundleMap.set(i,t+1),this._rigidBodyUsingBackBuffer&&i.updateBufferedMotionStates(!1);const e=i.impl instanceof d.d;e!==(this._evaluationType===c.q.Buffered)&&(e&&i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=this._evaluationType===c.q.Buffered?new d.d(i.count):new h.R(i.count))}return e}removeRigidBodyBundle(i,t){this._nullCheck();const e=this._physicsWorld.removeRigidBodyBundle(i,t);if(e){const t=this._rigidBodyBundleMap.get(i);void 0!==t&&(1===t?this._rigidBodyBundleMap.delete(i):this._rigidBodyBundleMap.set(i,t-1)),i.updateBufferedMotionStates(!1)}return e}addRigidBodyToGlobal(i){this._nullCheck();const t=this._physicsWorld.addRigidBodyToGlobal(i);if(t){let t=this._rigidBodyMap.get(i);void 0===t&&(t=0),this._rigidBodyMap.set(i,t+1),this._rigidBodyUsingBackBuffer&&i.updateBufferedMotionState(!1);const e=i.impl instanceof f.V;e!==(this._evaluationType===c.q.Buffered)&&(e&&i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=this._evaluationType===c.q.Buffered?new f.V:new u.x)}return t}removeRigidBodyFromGlobal(i){this._nullCheck();const t=this._physicsWorld.removeRigidBodyFromGlobal(i);if(t){const t=this._rigidBodyMap.get(i);void 0!==t&&(1===t?this._rigidBodyMap.delete(i):this._rigidBodyMap.set(i,t-1)),i.updateBufferedMotionState(!1)}return t}addRigidBodyBundleToGlobal(i){this._nullCheck();const t=this._physicsWorld.addRigidBodyBundleToGlobal(i);if(t){let t=this._rigidBodyBundleMap.get(i);void 0===t&&(t=0),this._rigidBodyBundleMap.set(i,t+1),this._rigidBodyUsingBackBuffer&&i.updateBufferedMotionStates(!1);const e=i.impl instanceof d.d;e!==(this._evaluationType===c.q.Buffered)&&(e&&i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=this._evaluationType===c.q.Buffered?new d.d(i.count):new h.R(i.count))}return t}removeRigidBodyBundleFromGlobal(i){this._nullCheck();const t=this._physicsWorld.removeRigidBodyBundleFromGlobal(i);if(t){const t=this._rigidBodyBundleMap.get(i);void 0!==t&&(1===t?this._rigidBodyBundleMap.delete(i):this._rigidBodyBundleMap.set(i,t-1)),i.updateBufferedMotionStates(!1)}return t}addRigidBodyShadow(i,t){this._nullCheck();let e=!1;this._usingWasmBackBuffer||(this.lock.wait(),this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!0),this._usingWasmBackBuffer=!0,e=!0);const s=this._physicsWorld.addRigidBodyShadow(i,t);if(s){let t=this._rigidBodyMap.get(i);void 0===t&&(t=0),this._rigidBodyMap.set(i,t+1),this._dynamicShadowCount+=1,this._rigidBodyUsingBackBuffer&&i.updateBufferedMotionState(!1);const e=i.impl instanceof f.V;e!==(this._evaluationType===c.q.Buffered)&&(e&&i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=this._evaluationType===c.q.Buffered?new f.V:new u.x)}else 0===this._dynamicShadowCount&&e&&(this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!1),this._usingWasmBackBuffer=!1);return s}removeRigidBodyShadow(i,t){this._nullCheck();const e=this._physicsWorld.removeRigidBodyShadow(i,t);if(e){const t=this._rigidBodyMap.get(i);void 0!==t&&(1===t?this._rigidBodyMap.delete(i):this._rigidBodyMap.set(i,t-1)),this._dynamicShadowCount-=1,i.updateBufferedMotionState(!1)}let s=!1;if(!this._preserveBackBuffer&&0===this._dynamicShadowCount&&this._usingWasmBackBuffer&&this._evaluationType!==c.q.Buffered&&(this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!1),this._usingWasmBackBuffer=!1,s=!0),s&&this._rigidBodyUsingBackBuffer){this._rigidBodyUsingBackBuffer=!1;for(const i of this._rigidBodyMap.keys())i.updateBufferedMotionState(!0);for(const i of this._rigidBodyBundleMap.keys())i.updateBufferedMotionStates(!0)}return e}addRigidBodyBundleShadow(i,t){this._nullCheck();let e=!1;this._usingWasmBackBuffer||(this.lock.wait(),this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!0),this._usingWasmBackBuffer=!0,e=!0);const s=this._physicsWorld.addRigidBodyBundleShadow(i,t);if(s){let t=this._rigidBodyBundleMap.get(i);void 0===t&&(t=0),this._rigidBodyBundleMap.set(i,t+1),this._dynamicShadowCount+=1,this._rigidBodyUsingBackBuffer&&i.updateBufferedMotionStates(!1);const e=i.impl instanceof d.d;e!==(this._evaluationType===c.q.Buffered)&&(e&&i.needToCommit&&(this.lock.wait(),i.commitToWasm()),i.impl=this._evaluationType===c.q.Buffered?new d.d(i.count):new h.R(i.count))}else 0===this._dynamicShadowCount&&e&&(this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!1),this._usingWasmBackBuffer=!1);return s}removeRigidBodyBundleShadow(i,t){this._nullCheck();const e=this._physicsWorld.removeRigidBodyBundleShadow(i,t);if(e){const t=this._rigidBodyBundleMap.get(i);void 0!==t&&(1===t?this._rigidBodyBundleMap.delete(i):this._rigidBodyBundleMap.set(i,t-1)),this._dynamicShadowCount-=1,i.updateBufferedMotionStates(!1)}let s=!1;if(!this._preserveBackBuffer&&0===this._dynamicShadowCount&&this._usingWasmBackBuffer&&this._evaluationType!==c.q.Buffered&&(this.wasmInstance.multiPhysicsWorldUseMotionStateBuffer(this._physicsWorld.ptr,!1),this._usingWasmBackBuffer=!1,s=!0),s&&this._rigidBodyUsingBackBuffer){this._rigidBodyUsingBackBuffer=!1;for(const i of this._rigidBodyMap.keys())i.updateBufferedMotionState(!0);for(const i of this._rigidBodyBundleMap.keys())i.updateBufferedMotionStates(!0)}return e}get rigidBodyReferenceCountMap(){return this._rigidBodyMap}get rigidBodyBundleReferenceCountMap(){return this._rigidBodyBundleMap}addConstraint(i,t,e){return this._nullCheck(),this._physicsWorld.addConstraint(i,t,e)}removeConstraint(i,t){return this._nullCheck(),this._physicsWorld.removeConstraint(i,t)}}},9009:(i,t,e)=>{var s;e.d(t,{q:()=>s}),function(i){i[i.Immediate=0]="Immediate",i[i.Buffered=1]="Buffered"}(s||(s={}))}}]);