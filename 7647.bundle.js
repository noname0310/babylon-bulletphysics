"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[7647],{28:(e,t,n)=>{n.r(t),n.d(t,{SceneBuilder:()=>g}),n(203),n(1503),n(8227);var r=n(7456),i=n(5581),s=n(1513),a=n(9711),o=n(6041),c=n(9923),h=n(9899),d=n(8144),l=n(554),f=n(6738),w=n(7168),u=n(5203),m=n(9009),p=n(7002),y=n(6405),_=n(1592),R=n(5901);class g{async build(e,t){const n=new l.Z(t);n.clearColor=new o.ov(.95,.95,.95,1);const g=new r.Lq("arcRotateCamera",0,0,500,new c.Pq(0,0,0),n);g.minZ=1,g.maxZ=1e3,g.setPosition(new c.Pq(10,10,-5)),g.attachControl(void 0,!1),g.inertia=.8,g.speed=10;const T=new s.g("hemisphericLight",new c.Pq(0,1,0),n);T.intensity=.5,T.specular=new o.v9(0,0,0),T.groundColor=new o.v9(1,1,1);const A=new i.Z("directionalLight",new c.Pq(.5,-1,1),n);A.intensity=.5;A.shadowMaxZ=60,A.shadowMinZ=-60,A.autoCalcShadowZBounds=!1,A.autoUpdateExtends=!1,A.shadowOrthoScale=0,A.orthoTop=60,A.orthoBottom=-60,A.orthoLeft=-60,A.orthoRight=60;const b=new a.o(2048,A,!0);b.transparencyShadow=!0,b.usePercentageCloserFiltering=!0,b.forceBackFacesOnly=!1,b.bias=.004,b.filteringQuality=a.o.QUALITY_MEDIUM;const L=await(0,f.e)(new p.t,1),C=new u.w(L);C.register(n),C.evaluationType=m.q.Immediate;const I=new c.uq;{const e=(0,d.x)("ground",{size:120},n);e.rotationQuaternion=c.PT.RotationAxis(new c.Pq(1,0,0),Math.PI/2),b.addShadowCaster(e),e.receiveShadows=!0;const t=new y.Ty(C,new c.Pq(0,0,-1),0),r=new R.t(L);r.shape=t,c.uq.FromQuaternionToRef(e.rotationQuaternion,I),r.setInitialTransform(I),r.motionType=1;const i=new _.U(C,r);C.addRigidBody(i)}const S=new y.SA(C,new c.Pq(1,1,1)),v=new R.t(L);v.motionType=0,v.shape=S,v.setInitialTransform(c.uq.TranslationToRef(0,3,0,I)),v.friction=1,v.linearDamping=.3,v.angularDamping=.3,v.disableDeactivation=!0;const P=(0,h.an)("box1",{size:2},n);b.addShadowCaster(P),P.receiveShadows=!0,P.rotationQuaternion=c.PT.Identity();const x=new _.U(C,v);C.addRigidBody(x);const q=(0,h.an)("box2",{size:2},n);b.addShadowCaster(q),q.receiveShadows=!0,q.position.set(0,6,0),q.rotationQuaternion=c.PT.Identity();const B=new _.U(C,v);C.addRigidBody(B);const k=new w.o6(C,x,B,c.uq.Translation(0,1,0),c.uq.Translation(0,-1,0),!0);k.setLinearLowerLimit(new c.Pq(0,0,0)),k.setLinearUpperLimit(new c.Pq(0,0,0)),k.setAngularLowerLimit(new c.Pq(Math.PI/4,0,0)),k.setAngularUpperLimit(new c.Pq(0,0,0)),C.addConstraint(k,!0);let F=0,M=0;return C.onTickObservable.add((()=>{x.getTransformMatrixToRef(I),I.getTranslationToRef(P.position),c.PT.FromRotationMatrixToRef(I,P.rotationQuaternion),B.getTransformMatrixToRef(I),I.getTranslationToRef(q.position),c.PT.FromRotationMatrixToRef(I,q.rotationQuaternion),F+=t.getDeltaTime(),M+=1,M%3==0&&(I.setTranslationFromFloats(0,3*Math.sin(F/1e3),0),x.setTransformMatrix(I))})),window.runtime=C,window.body1=x,n}}},7168:(e,t,n)=>{n.d(t,{o6:()=>h,vC:()=>d});class r{_wasmInstance;_ptr;_bodyReference;_referenceCount;constructor(e,t,n){this._wasmInstance=e,this._ptr=t,this._bodyReference=n,Array.isArray(n)?(n[0].addReference(),n[1].addReference()):n.addReference(),this._referenceCount=0}dispose(){if(this._referenceCount>0)throw new Error("Cannot dispose constraint while it still has references");0!==this._ptr&&(this._wasmInstance.deref()?.destroyConstraint(this._ptr),this._ptr=0,Array.isArray(this._bodyReference)?(this._bodyReference[0].removeReference(),this._bodyReference[1].removeReference()):this._bodyReference.removeReference(),this._bodyReference=null)}get ptr(){return this._ptr}addReference(){this._referenceCount+=1}removeReference(){this._referenceCount-=1}get hasReferences(){return 0<this._referenceCount}}function i(e){e.dispose()}const s=new WeakMap;class a{runtime;_inner;_worldReference;constructor(e,t,n){if(Array.isArray(n)){if(n[0].runtime!==e||n[1].runtime!==e)throw new Error("Cannot create constraint between bodies from different runtimes")}else if(n.runtime!==e)throw new Error("Cannot create constraint between body and bundle from different runtimes");this.runtime=e,this._inner=new r(new WeakRef(e.wasmInstance),t,n),this._worldReference=null;let a=s.get(e.wasmInstance);void 0===a&&(a=new FinalizationRegistry(i),s.set(e.wasmInstance,a)),a.register(this,this._inner,this)}dispose(){if(0===this._inner.ptr)return;this._inner.dispose();const e=s.get(this.runtime.wasmInstance);e?.unregister(this)}get ptr(){return this._inner.ptr}addReference(){this._inner.addReference()}removeReference(){this._inner.removeReference()}setWorldReference(e){if(null!==this._worldReference&&null!==e)throw new Error("Cannot add constraint to multiple worlds");this._worldReference!==e&&(this._worldReference=e,null!==e?this._inner.addReference():this._inner.removeReference())}}const o=64;class c extends a{setLinearLowerLimit(e){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintSetLinearLowerLimit(this._inner.ptr,e.x,e.y,e.z)}setLinearUpperLimit(e){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintSetLinearUpperLimit(this._inner.ptr,e.x,e.y,e.z)}setAngularLowerLimit(e){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintSetAngularLowerLimit(this._inner.ptr,e.x,e.y,e.z)}setAngularUpperLimit(e){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintSetAngularUpperLimit(this._inner.ptr,e.x,e.y,e.z)}}class h extends c{constructor(e,t,n,r,i,s){const a=e.wasmInstance,c=a.allocateBuffer(o),h=a.createTypedArray(Float32Array,c,16);r.copyToArray(h.array);const d=a.allocateBuffer(o),l=a.createTypedArray(Float32Array,d,16);i.copyToArray(l.array);const f=Array.isArray(n),w=f?a.createGeneric6DofConstraintFromBundle(t.ptr,n[0],n[1],c,d,s):a.createGeneric6DofConstraint(t.ptr,n.ptr,c,d,s);a.deallocateBuffer(c,o),a.deallocateBuffer(d,o),super(e,w,f?t:[t,n])}}class d extends c{constructor(e,t,n,r,i,s){const a=e.wasmInstance,c=a.allocateBuffer(o),h=a.createTypedArray(Float32Array,c,16);r.copyToArray(h.array);const d=a.allocateBuffer(o),l=a.createTypedArray(Float32Array,d,16);i.copyToArray(l.array);const f=Array.isArray(n),w=f?a.createGeneric6DofSpringConstraintFromBundle(t.ptr,n[0],n[1],c,d,s):a.createGeneric6DofSpringConstraint(t.ptr,n.ptr,c,d,s);a.deallocateBuffer(c,o),a.deallocateBuffer(d,o),super(e,w,f?t:[t,n])}enableSpring(e,t){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintEnableSpring(this._inner.ptr,e,t)}setStiffness(e,t){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintSetStiffness(this._inner.ptr,e,t)}setDamping(e,t){this._inner.hasReferences&&this.runtime.lock.wait(),this.runtime.wasmInstance.constraintSetDamping(this._inner.ptr,e,t)}}}}]);