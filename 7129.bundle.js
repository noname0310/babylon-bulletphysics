"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[7129],{7129:(e,t,n)=>{n.r(t),n.d(t,{SceneBuilder:()=>g}),n(203),n(1503),n(8227);var o=n(7456),r=n(5581),s=n(1513),a=n(9711),i=n(6041),l=n(9923),c=n(9899),d=n(8144),w=n(554),u=n(7774),f=n(9800);class g{async build(e,t){const n=new w.Z(t);n.clearColor=new i.ov(.95,.95,.95,1);const g=new o.Lq("arcRotateCamera",0,0,500,new l.Pq(0,0,0),n);g.minZ=1,g.maxZ=3e3,g.setPosition(new l.Pq(60,40,-50).scaleInPlace(10)),g.attachControl(void 0,!1),g.inertia=.8,g.speed=10;const p=new s.g("hemisphericLight",new l.Pq(0,1,0),n);p.intensity=.5,p.specular=new i.v9(0,0,0),p.groundColor=new i.v9(1,1,1);const h=new r.Z("directionalLight",new l.Pq(.5,-1,1),n);h.intensity=.5;h.shadowMaxZ=250,h.shadowMinZ=-250,h.autoCalcShadowZBounds=!1,h.autoUpdateExtends=!1,h.shadowOrthoScale=0,h.orthoTop=250,h.orthoBottom=-250,h.orthoLeft=-250,h.orthoRight=250;const m=new a.o(2048,h,!0);m.transparencyShadow=!0,m.usePercentageCloserFiltering=!0,m.forceBackFacesOnly=!1,m.bias=.004,m.filteringQuality=a.o.QUALITY_MEDIUM;const y=await(0,u.A)(),b=new y.btDefaultCollisionConfiguration,S=new y.btCollisionDispatcher(b),T=new y.btDbvtBroadphase,C=new y.btSequentialImpulseConstraintSolver,x=new y.btDiscreteDynamicsWorld(S,T,C,b);x.setGravity(new y.btVector3(0,-10,0));const L=new l.uq;{const e=(0,d.x)("ground",{size:500},n);e.rotationQuaternion=l.PT.RotationAxis(new l.Pq(1,0,0),Math.PI/2),m.addShadowCaster(e),e.receiveShadows=!0;const t=new y.btVector3(0,0,-1),o=new y.btStaticPlaneShape(t,0);y.destroy(t);const r=new y.btDefaultMotionState,s=new y.btRigidBodyConstructionInfo(0,r,o);l.uq.FromQuaternionToRef(e.rotationQuaternion,L);const a=new y.btTransform;a.setFromOpenGLMatrix(L.asArray()),r.setWorldTransform(a),y.destroy(a);const i=new y.btRigidBody(s);i.setDamping(0,0),i.setFriction(.5),i.setRestitution(0),i.setSleepingThresholds(0,1),i.setCollisionFlags(2|i.getCollisionFlags()),x.addRigidBody(i),y.destroy(s)}const R=(0,c.an)("box",{size:2},n);m.addShadowCaster(R),R.receiveShadows=!0;const B=new Float32Array(32768);R.thinInstanceSetBuffer("matrix",B,16,!1);const q=new y.btVector3(1,1,1),P=new y.btBoxShape(q);y.destroy(q);const M=[];for(let e=0;e<2;++e)for(let t=0;t<2;++t){const n=20*(t-1)+10,o=20*(e-1)+10,r=[];for(let e=0;e<512;++e){const t=l.uq.TranslationToRef(n,1+2*e,o,L),s=new y.btDefaultMotionState,a=new y.btTransform;a.setFromOpenGLMatrix(t.asArray()),s.setWorldTransform(a),y.destroy(a);const i=new y.btVector3(0,0,0);P.calculateLocalInertia(1,i);const c=new y.btRigidBodyConstructionInfo(1,s,P,i);y.destroy(i),c.set_m_friction(1),c.set_m_linearDamping(.3),c.set_m_angularDamping(.3),c.set_m_linearSleepingThreshold(0),c.set_m_angularSleepingThreshold(1),r.push(c)}for(let e=0;e<512;++e){const t=r[e],n=new y.btRigidBody(t);x.addRigidBody(n),M.push(n)}for(let e=0;e<r.length;++e)y.destroy(r[e]);for(let e=0;e<512;e+=2){const t=[e,e+1],n=new y.btTransform,o=new y.btTransform;n.setFromOpenGLMatrix(l.uq.Translation(0,-1.2,0).asArray()),o.setFromOpenGLMatrix(l.uq.Translation(0,1.2,0).asArray());const r=new y.btGeneric6DofSpringConstraint(M[t[0]],M[t[1]],n,o,!0);y.destroy(n),y.destroy(o);const s=new y.btVector3(0,0,0);s.setValue(0,0,0),r.setLinearLowerLimit(s),s.setValue(0,0,0),r.setLinearUpperLimit(s),s.setValue(Math.PI/4,0,0),r.setAngularLowerLimit(s),s.setValue(0,0,0),r.setAngularUpperLimit(s),y.destroy(s);for(let e=0;e<6;++e)r.enableSpring(e,!0),r.setStiffness(e,100),r.setDamping(e,1);x.addConstraint(r,!0)}}console.log("Rigid body count:",2048);const D=new y.btTransform,_=new l.Pq(1,1,1),A=new l.Pq,I=new l.PT,v=new f.X((()=>{const e=performance.now();x.stepSimulation(1/60,10,1/60);for(let e=0;e<M.length;++e){M[e].getMotionState().getWorldTransform(D);const t=D.getOrigin(),n=D.getRotation();l.uq.ComposeToRef(_,I.set(n.x(),n.y(),n.z(),n.w()),A.set(t.x(),t.y(),t.z()),L),L.copyToArray(B,16*e)}R.thinInstanceBufferUpdated("matrix");const t=performance.now(),o=t-e;return n.render(),[o,performance.now()-t]}));return v.sampleCount=5e3,v.runBench(),n.onBeforeRenderObservable.add((()=>{x.stepSimulation(1/60,10,1/60);for(let e=0;e<M.length;++e){M[e].getMotionState().getWorldTransform(D);const t=D.getOrigin(),n=D.getRotation();l.uq.ComposeToRef(_,I.set(n.x(),n.y(),n.z(),n.w()),A.set(t.x(),t.y(),t.z()),L),L.copyToArray(B,16*e)}R.thinInstanceBufferUpdated("matrix")})),n}}}}]);