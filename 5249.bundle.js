"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[5249],{5249:(e,t,r)=>{r.d(t,{DDSTools:()=>B});var a=r(4867),o=r(1137),n=r(6755),l=r(8864),s=r(854),f=r(655),i=r(8688),u=r(6326),c=r(8454);u.$.prototype._partialLoadFile=function(e,t,r,a,o=null){this._loadFile(e,(e=>{r[t]=e,r._internalCount++,6===r._internalCount&&a(r)}),void 0,void 0,!0,((e,t)=>{o&&e&&o(e.status+" "+e.statusText,t)}))},u.$.prototype._cascadeLoadFiles=function(e,t,r,a=null){const o=[];o._internalCount=0;for(let e=0;e<6;e++)this._partialLoadFile(r[e],e,o,t,a)},u.$.prototype._cascadeLoadImgs=function(e,t,r,a,o=null,n){const l=[];l._internalCount=0;for(let s=0;s<6;s++)this._partialLoadImg(a[s],s,l,e,t,r,o,n)},u.$.prototype._partialLoadImg=function(e,t,r,a,o,n,l=null,s){const u=(0,i.z)();(0,f.W$)(e,(e=>{r[t]=e,r._internalCount++,a&&a.removePendingData(u),6===r._internalCount&&n&&n(o,r)}),((e,t)=>{a&&a.removePendingData(u),l&&l(e,t)}),a?a.offlineProvider:null,s),a&&a.addPendingData(u)},u.$.prototype.createCubeTextureBase=function(e,t,r,a,n=null,l=null,f,i=null,u=!1,A=0,d=0,y=null,p=null,h=null,_=!1,b=null){const B=y||new s.h(this,7);B.isCube=!0,B.url=e,B.generateMipMaps=!a,B._lodGenerationScale=A,B._lodGenerationOffset=d,B._useSRGBBuffer=!!_&&this._caps.supportSRGBBuffers&&(this.version>1||this.isWebGPU||!!a),B!==y&&(B.label=e.substring(0,60)),this._doNotHandleContextLost||(B._extension=i,B._files=r,B._buffer=b);const G=e;this._transformTextureUrl&&!y&&(e=this._transformTextureUrl(e));const F=i??function(e){const t=e.split("?")[0],r=t.lastIndexOf(".");return r>-1?t.substring(r).toLowerCase():""}(e),C=(0,c.gT)(F),m=(s,c)=>{e===G?l&&s&&l(s.status+" "+s.statusText,c):(o.V.Warn(`Failed to load ${e}, falling back to the ${G}`),this.createCubeTextureBase(G,t,r,!!a,n,l,f,i,u,A,d,B,p,h,_,b))};if(C)C.then((a=>{const s=e=>{p&&p(B,e),a.loadCubeData(e,B,u,n,l)};b?s(b):r&&6===r.length?a.supportCascades?this._cascadeLoadFiles(t,(e=>s(e.map((e=>new Uint8Array(e))))),r,l):l?l("Textures type does not support cascades."):o.V.Warn("Texture loader does not support cascades."):this._loadFile(e,(e=>s(new Uint8Array(e))),void 0,void 0,!0,m)}));else{if(!r||0===r.length)throw new Error("Cannot load cubemap because files were not defined, or the correct loader was not found.");this._cascadeLoadImgs(t,B,((e,t)=>{h&&h(e,t)}),r,l)}return this._internalTexturesCache.push(B),B};const A=131072,d=131072;function y(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const p=y("DXT1"),h=y("DXT3"),_=y("DXT5"),b=y("DX10");class B{static GetDDSInfo(e){const t=new Int32Array(e.buffer,e.byteOffset,31),r=new Int32Array(e.buffer,e.byteOffset,35);let a=1;t[2]&A&&(a=Math.max(1,t[7]));const o=t[21],n=o===b?r[32]:0;let l=0;switch(o){case 113:l=2;break;case 116:l=1;break;case b:if(10===n){l=2;break}if(2===n){l=1;break}}return{width:t[4],height:t[3],mipmapCount:a,isFourCC:!(4&~t[20]),isRGB:!(64&~t[20]),isLuminance:(t[20]&d)===d,isCube:!(512&~t[28]),isCompressed:o===p||o===h||o===_,dxgiFormat:n,textureType:l}}static _GetHalfFloatAsFloatRGBAArrayBuffer(e,t,r,a,o,n){const s=new Float32Array(a),f=new Uint16Array(o,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);s[i]=(0,l.SX)(f[a]),s[i+1]=(0,l.SX)(f[a+1]),s[i+2]=(0,l.SX)(f[a+2]),B.StoreLODInAlphaChannel?s[i+3]=n:s[i+3]=(0,l.SX)(f[a+3]),i+=4}return s}static _GetHalfFloatRGBAArrayBuffer(e,t,r,a,o,n){if(B.StoreLODInAlphaChannel){const s=new Uint16Array(a),f=new Uint16Array(o,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);s[i]=f[a],s[i+1]=f[a+1],s[i+2]=f[a+2],s[i+3]=(0,l.LZ)(n),i+=4}return s}return new Uint16Array(o,r,a)}static _GetFloatRGBAArrayBuffer(e,t,r,a,o,n){if(B.StoreLODInAlphaChannel){const l=new Float32Array(a),s=new Float32Array(o,r);let f=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);l[f]=s[a],l[f+1]=s[a+1],l[f+2]=s[a+2],l[f+3]=n,f+=4}return l}return new Float32Array(o,r,a)}static _GetFloatAsHalfFloatRGBAArrayBuffer(e,t,r,a,o,n){const s=new Uint16Array(a),f=new Float32Array(o,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++)s[i]=(0,l.LZ)(f[i]),s[i+1]=(0,l.LZ)(f[i+1]),s[i+2]=(0,l.LZ)(f[i+2]),B.StoreLODInAlphaChannel?s[i+3]=(0,l.LZ)(n):s[i+3]=(0,l.LZ)(f[i+3]),i+=4;return s}static _GetFloatAsUIntRGBAArrayBuffer(e,t,r,o,n,l){const s=new Uint8Array(o),f=new Float32Array(n,r);let i=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const o=4*(t+r*e);s[i]=255*(0,a.OQ)(f[o]),s[i+1]=255*(0,a.OQ)(f[o+1]),s[i+2]=255*(0,a.OQ)(f[o+2]),B.StoreLODInAlphaChannel?s[i+3]=l:s[i+3]=255*(0,a.OQ)(f[o+3]),i+=4}return s}static _GetHalfFloatAsUIntRGBAArrayBuffer(e,t,r,o,n,s){const f=new Uint8Array(o),i=new Uint16Array(n,r);let u=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const o=4*(t+r*e);f[u]=255*(0,a.OQ)((0,l.SX)(i[o])),f[u+1]=255*(0,a.OQ)((0,l.SX)(i[o+1])),f[u+2]=255*(0,a.OQ)((0,l.SX)(i[o+2])),B.StoreLODInAlphaChannel?f[u+3]=s:f[u+3]=255*(0,a.OQ)((0,l.SX)(i[o+3])),u+=4}return f}static _GetRGBAArrayBuffer(e,t,r,a,o,n,l,s,f){const i=new Uint8Array(a),u=new Uint8Array(o,r);let c=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=4*(t+r*e);i[c]=u[a+n],i[c+1]=u[a+l],i[c+2]=u[a+s],i[c+3]=u[a+f],c+=4}return i}static _ExtractLongWordOrder(e){return 0===e||255===e||-16777216===e?0:1+B._ExtractLongWordOrder(e>>8)}static _GetRGBArrayBuffer(e,t,r,a,o,n,l,s){const f=new Uint8Array(a),i=new Uint8Array(o,r);let u=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=3*(t+r*e);f[u]=i[a+n],f[u+1]=i[a+l],f[u+2]=i[a+s],u+=3}return f}static _GetLuminanceArrayBuffer(e,t,r,a,o){const n=new Uint8Array(a),l=new Uint8Array(o,r);let s=0;for(let r=0;r<t;r++)for(let t=0;t<e;t++){const a=t+r*e;n[s]=l[a],s++}return n}static UploadDDSLevels(e,t,r,a,l,s,f=-1,i,u=!0){let c=null;a.sphericalPolynomial&&(c=[]);const d=!!e.getCaps().s3tc;t.generateMipMaps=l;const y=new Int32Array(r.buffer,r.byteOffset,31);let G,F,C,m,w,x,L,O=0,g=0,D=1;if(542327876!==y[0])return void o.V.Error("Invalid magic number in DDS header");if(!a.isFourCC&&!a.isRGB&&!a.isLuminance)return void o.V.Error("Unsupported format, must contain a FourCC, RGB or LUMINANCE code");if(a.isCompressed&&!d)return void o.V.Error("Compressed textures are not supported on this platform.");let R=y[22];m=y[1]+4;let U=!1;if(a.isFourCC)switch(G=y[21],G){case p:D=8,g=33777;break;case h:D=16,g=33778;break;case _:D=16,g=33779;break;case 113:U=!0,R=64;break;case 116:U=!0,R=128;break;case b:{m+=20;let e=!1;switch(a.dxgiFormat){case 10:U=!0,R=64,e=!0;break;case 2:U=!0,R=128,e=!0;break;case 88:a.isRGB=!0,a.isFourCC=!1,R=32,e=!0}if(e)break}default:return void o.V.Error(["Unsupported FourCC code:",(S=G,String.fromCharCode(255&S,S>>8&255,S>>16&255,S>>24&255))])}var S;const T=B._ExtractLongWordOrder(y[23]),k=B._ExtractLongWordOrder(y[24]),I=B._ExtractLongWordOrder(y[25]),v=B._ExtractLongWordOrder(y[26]);U&&(g=e._getRGBABufferInternalSizedFormat(a.textureType)),x=1,y[2]&A&&!1!==l&&(x=Math.max(1,y[7]));const H=i||0,M=e.getCaps();for(let o=H;o<s;o++){for(F=y[4],C=y[3],L=0;L<x;++L){if(-1===f||f===L){const n=-1===f?L:0;if(!a.isCompressed&&a.isFourCC){t.format=5,O=F*C*4;let a=null;if(e._badOS||e._badDesktopOS||!M.textureHalfFloat&&!M.textureFloat)128===R?(a=B._GetFloatAsUIntRGBAArrayBuffer(F,C,r.byteOffset+m,O,r.buffer,n),c&&0==n&&c.push(B._GetFloatRGBAArrayBuffer(F,C,r.byteOffset+m,O,r.buffer,n))):64===R&&(a=B._GetHalfFloatAsUIntRGBAArrayBuffer(F,C,r.byteOffset+m,O,r.buffer,n),c&&0==n&&c.push(B._GetHalfFloatAsFloatRGBAArrayBuffer(F,C,r.byteOffset+m,O,r.buffer,n))),t.type=0;else{const e=M.textureFloat&&(u&&M.textureFloatLinearFiltering||!u),o=M.textureHalfFloat&&(u&&M.textureHalfFloatLinearFiltering||!u),l=(128===R||64===R&&!o)&&e?1:(64===R||128===R&&!e)&&o?2:0;let s,f=null;if(128===R)switch(l){case 1:s=B._GetFloatRGBAArrayBuffer,f=null;break;case 2:s=B._GetFloatAsHalfFloatRGBAArrayBuffer,f=B._GetFloatRGBAArrayBuffer;break;case 0:s=B._GetFloatAsUIntRGBAArrayBuffer,f=B._GetFloatRGBAArrayBuffer}else switch(l){case 1:s=B._GetHalfFloatAsFloatRGBAArrayBuffer,f=null;break;case 2:s=B._GetHalfFloatRGBAArrayBuffer,f=B._GetHalfFloatAsFloatRGBAArrayBuffer;break;case 0:s=B._GetHalfFloatAsUIntRGBAArrayBuffer,f=B._GetHalfFloatAsFloatRGBAArrayBuffer}t.type=l,a=s(F,C,r.byteOffset+m,O,r.buffer,n),c&&0==n&&c.push(f?f(F,C,r.byteOffset+m,O,r.buffer,n):a)}a&&e._uploadDataToTextureDirectly(t,a,o,n)}else if(a.isRGB)t.type=0,24===R?(t.format=4,O=F*C*3,w=B._GetRGBArrayBuffer(F,C,r.byteOffset+m,O,r.buffer,T,k,I),e._uploadDataToTextureDirectly(t,w,o,n)):(t.format=5,O=F*C*4,w=B._GetRGBAArrayBuffer(F,C,r.byteOffset+m,O,r.buffer,T,k,I,v),e._uploadDataToTextureDirectly(t,w,o,n));else if(a.isLuminance){const a=e._getUnpackAlignement(),l=F;O=Math.floor((F+a-1)/a)*a*(C-1)+l,w=B._GetLuminanceArrayBuffer(F,C,r.byteOffset+m,O,r.buffer),t.format=1,t.type=0,e._uploadDataToTextureDirectly(t,w,o,n)}else O=Math.max(4,F)/4*Math.max(4,C)/4*D,w=new Uint8Array(r.buffer,r.byteOffset+m,O),t.type=0,e._uploadCompressedDataToTextureDirectly(t,g,F,C,w,o,n)}m+=R?F*C*(R/8):O,F*=.5,C*=.5,F=Math.max(1,F),C=Math.max(1,C)}if(void 0!==i)break}c&&c.length>0?a.sphericalPolynomial=n.d.ConvertCubeMapToSphericalPolynomial({size:y[4],right:c[0],left:c[1],up:c[2],down:c[3],front:c[4],back:c[5],format:5,type:1,gammaSpace:!1}):a.sphericalPolynomial=void 0}}B.StoreLODInAlphaChannel=!1}}]);