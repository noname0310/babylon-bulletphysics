"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[994],{50994:(e,a,s)=>{s.r(a),s.d(a,{_DDSTextureLoader:()=>o});var i=s(77517),t=s(36464);class o{constructor(){this.supportCascades=!0}loadCubeData(e,a,s,o){const p=a.getEngine();let n,l=!1,r=1e3;if(Array.isArray(e))for(let s=0;s<e.length;s++){const i=e[s];n=t.DDSTools.GetDDSInfo(i),a.width=n.width,a.height=n.height,l=(n.isRGB||n.isLuminance||n.mipmapCount>1)&&a.generateMipMaps,p._unpackFlipY(n.isCompressed),t.DDSTools.UploadDDSLevels(p,a,i,n,l,6,-1,s),n.isFourCC||1!==n.mipmapCount?r=n.mipmapCount-1:p.generateMipMapsForCubemap(a)}else{const o=e;n=t.DDSTools.GetDDSInfo(o),a.width=n.width,a.height=n.height,s&&(n.sphericalPolynomial=new i.Q),l=(n.isRGB||n.isLuminance||n.mipmapCount>1)&&a.generateMipMaps,p._unpackFlipY(n.isCompressed),t.DDSTools.UploadDDSLevels(p,a,o,n,l,6),n.isFourCC||1!==n.mipmapCount?r=n.mipmapCount-1:p.generateMipMapsForCubemap(a,!1)}p._setCubeMapTextureParams(a,l,r),a.isReady=!0,a.onLoadedObservable.notifyObservers(a),a.onLoadedObservable.clear(),o&&o({isDDS:!0,width:a.width,info:n,data:e,texture:a})}loadData(e,a,s){const i=t.DDSTools.GetDDSInfo(e),o=(i.isRGB||i.isLuminance||i.mipmapCount>1)&&a.generateMipMaps&&Math.max(i.width,i.height)>>i.mipmapCount-1==1;s(i.width,i.height,o,i.isFourCC,(()=>{t.DDSTools.UploadDDSLevels(a.getEngine(),a,e,i,o,1)}))}}}}]);