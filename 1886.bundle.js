"use strict";(self.webpackChunkbabylon_bulletphysics=self.webpackChunkbabylon_bulletphysics||[]).push([[1886],{5228:(t,e,r)=>{r.d(e,{R:()=>s});class s{shouldSync;_count;constructor(t){this.shouldSync=!0,this._count=t}setTransformMatrixFromArray(t,e,r,s=0){const n=t.array,a=20*e;n[a+4+0]=r[s],n[a+8+0]=r[s+1],n[a+12+0]=r[s+2],n[a+4+1]=r[s+4],n[a+8+1]=r[s+5],n[a+12+1]=r[s+6],n[a+4+2]=r[s+8],n[a+8+2]=r[s+9],n[a+12+2]=r[s+10],n[a+16+0]=r[s+12],n[a+16+1]=r[s+13],n[a+16+2]=r[s+14]}setTransformMatricesFromArray(t,e,r=0){const s=t.array,n=this._count;let a=0,i=r;for(let t=0;t<n;++t)s[a+4+0]=e[i],s[a+8+0]=e[i+1],s[a+12+0]=e[i+2],s[a+4+1]=e[i+4],s[a+8+1]=e[i+5],s[a+12+1]=e[i+6],s[a+4+2]=e[i+8],s[a+8+2]=e[i+9],s[a+12+2]=e[i+10],s[a+16+0]=e[i+12],s[a+16+1]=e[i+13],s[a+16+2]=e[i+14],a+=20,i+=16}}},94444:(t,e,r)=>{r.d(e,{x:()=>s});class s{shouldSync;constructor(){this.shouldSync=!0}setTransformMatrixFromArray(t,e,r=0){const s=t.array;s[4]=e[r],s[8]=e[r+1],s[12]=e[r+2],s[5]=e[r+4],s[9]=e[r+5],s[13]=e[r+6],s[6]=e[r+8],s[10]=e[r+9],s[14]=e[r+10],s[16]=e[r+12],s[17]=e[r+13],s[18]=e[r+14]}}},46738:(t,e,r)=>{r.d(e,{e:()=>i});class s{array;constructor(t,e,r,s){this.array=new t(e.buffer,r,s)}}class n{_memory;_byteOffset;_length;_array;constructor(t,e,r,s){this._memory=e,this._byteOffset=r,this._length=s,this._array=0===s?new t(0):new t(e.buffer,r,s)}get array(){return this._array.length!==this._length&&(this._array=new this._array.constructor(this._memory.buffer,this._byteOffset,this._length)),this._array}}const a=new WeakMap;async function i(t,e=navigator.hardwareConcurrency){const r=t.getWasmInstanceInner();{const t=a.get(r);if(void 0!==t)return t}let i=null;a.set(r,new Promise((t=>i=t)));const h={...r},c=await h.default({});h.init();const o=c.memory;return h.memory=o,o.buffer instanceof ArrayBuffer?h.createTypedArray=function(t,e,r){return new n(t,o,e,r)}:h.createTypedArray=function(t,e,r){return new s(t,o,e,r)},await(h.initThreadPool?.(e)),i(h),h}},26405:(t,e,r)=>{r.d(e,{O4:()=>c,SA:()=>h,Ty:()=>o});class s{_wasmInstance;_ptr;_referenceCount;constructor(t,e){this._wasmInstance=t,this._ptr=e,this._referenceCount=0}dispose(){if(this._referenceCount>0)throw new Error("Cannot dispose shape while it still has references");0!==this._ptr&&(this._wasmInstance.deref()?.destroyShape(this._ptr),this._ptr=0)}get ptr(){return this._ptr}addReference(){this._referenceCount+=1}removeReference(){this._referenceCount-=1}}function n(t){t.dispose()}const a=new WeakMap;class i{runtime;_inner;constructor(t,e){this.runtime=t,this._inner=new s(new WeakRef(t.wasmInstance),e);let r=a.get(t.wasmInstance);void 0===r&&(r=new FinalizationRegistry(n),a.set(t.wasmInstance,r)),r.register(this,this._inner,this)}dispose(){if(0===this._inner.ptr)return;this._inner.dispose();const t=a.get(this.runtime.wasmInstance);t?.unregister(this)}get ptr(){return this._inner.ptr}addReference(){this._inner.addReference()}removeReference(){this._inner.removeReference()}}class h extends i{constructor(t,e){const r=t.wasmInstance.createBoxShape(e.x,e.y,e.z);super(t,r)}}class c extends i{constructor(t,e){const r=t.wasmInstance.createSphereShape(e);super(t,r)}}class o extends i{constructor(t,e,r){const s=t.wasmInstance.createStaticPlaneShape(e.x,e.y,e.z,r);super(t,s)}}},35901:(t,e,r)=>{r.d(e,{t:()=>i});class s{_wasmInstance;_ptr;_shapeReference;constructor(t,e){this._wasmInstance=t,this._ptr=e,this._shapeReference=null}dispose(){0!==this._ptr&&(this._wasmInstance.deref()?.deallocateBuffer(this._ptr,128),this._ptr=0,this._shapeReference&&this._shapeReference.removeReference(),this._shapeReference=null)}get ptr(){return this._ptr}get shape(){return this._shapeReference}set shape(t){this._shapeReference&&this._shapeReference.removeReference(),this._shapeReference=t,this._shapeReference&&this._shapeReference.addReference()}}function n(t){t.dispose()}const a=new WeakMap;class i{_wasmInstance;_uint32Ptr;_float32Ptr;_uint8Ptr;_uint16Ptr;_inner;constructor(t){this._wasmInstance=t;const e=t.allocateBuffer(128);this._uint32Ptr=t.createTypedArray(Uint32Array,e,32),this._float32Ptr=t.createTypedArray(Float32Array,e,32),this._uint8Ptr=t.createTypedArray(Uint8Array,e,128),this._uint16Ptr=t.createTypedArray(Uint16Array,e,64),this._inner=new s(new WeakRef(t),e);const r=this._uint32Ptr.array,i=this._float32Ptr.array,h=this._uint8Ptr.array,c=this._uint16Ptr.array;r[0]=0,i[4]=1,i[5]=0,i[6]=0,i[7]=0,i[8]=0,i[9]=1,i[10]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=1,i[15]=0,i[16]=0,i[17]=0,i[18]=0,i[19]=1,h[80]=0,i[21]=1,i[22]=0,i[23]=0,i[24]=.5,i[25]=0,i[26]=0,i[27]=1,c[56]=1,c[57]=65535,h[116]=0,h[117]=0,h[118]=0;let o=a.get(t);void 0===o&&(o=new FinalizationRegistry(n),a.set(t,o)),o.register(this,this._inner,this)}dispose(){if(0===this._inner.ptr)return;this._inner.dispose();const t=a.get(this._wasmInstance);t?.unregister(this)}get ptr(){return this._inner.ptr}_nullCheck(){if(0===this._inner.ptr)throw new Error("Cannot access disposed RigidBodyConstructionInfo")}get shape(){return this._nullCheck(),this._inner.shape}set shape(t){this._nullCheck(),this._inner.shape=t,this._uint32Ptr.array[0]=t?t.ptr:0}getInitialTransformToRef(t){this._nullCheck();const e=this._float32Ptr.array;return t.set(e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15],e[16],e[17],e[18],e[19]),t}setInitialTransform(t){this._nullCheck();const e=this._float32Ptr.array;t.copyToArray(e,4)}get motionType(){return this._nullCheck(),this._uint8Ptr.array[80]}set motionType(t){this._nullCheck(),this._uint8Ptr.array[80]=t}get mass(){return this._nullCheck(),this._float32Ptr.array[21]}set mass(t){this._nullCheck(),this._float32Ptr.array[21]=t}get linearDamping(){return this._nullCheck(),this._float32Ptr.array[22]}set linearDamping(t){this._nullCheck(),this._float32Ptr.array[22]=t}get angularDamping(){return this._nullCheck(),this._float32Ptr.array[23]}set angularDamping(t){this._nullCheck(),this._float32Ptr.array[23]=t}get friction(){return this._nullCheck(),this._float32Ptr.array[24]}set friction(t){this._nullCheck(),this._float32Ptr.array[24]=t}get restitution(){return this._nullCheck(),this._float32Ptr.array[25]}set restitution(t){this._nullCheck(),this._float32Ptr.array[25]=t}get linearSleepingThreshold(){return this._nullCheck(),this._float32Ptr.array[26]}set linearSleepingThreshold(t){this._nullCheck(),this._float32Ptr.array[26]=t}get angularSleepingThreshold(){return this._nullCheck(),this._float32Ptr.array[27]}set angularSleepingThreshold(t){this._nullCheck(),this._float32Ptr.array[27]=t}get collisionGroup(){return this._nullCheck(),this._uint16Ptr.array[56]}set collisionGroup(t){this._nullCheck(),this._uint16Ptr.array[56]=t}get collisionMask(){return this._nullCheck(),this._uint16Ptr.array[57]}set collisionMask(t){this._nullCheck(),this._uint16Ptr.array[57]=t}get additionalDamping(){return this._nullCheck(),!!this._uint8Ptr.array[116]}set additionalDamping(t){this._nullCheck(),this._uint8Ptr.array[116]=+t}get noContactResponse(){return this._nullCheck(),!!this._uint8Ptr.array[117]}set noContactResponse(t){this._nullCheck(),this._uint8Ptr.array[117]=+t}get disableDeactivation(){return this._nullCheck(),!!this._uint8Ptr.array[118]}set disableDeactivation(t){this._nullCheck(),this._uint8Ptr.array[118]=+t}}}}]);